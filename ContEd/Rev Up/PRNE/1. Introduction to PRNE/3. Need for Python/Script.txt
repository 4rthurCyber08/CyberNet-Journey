Python was developed by Guido van Rossum and released in 1991 with the philosophy that code should be fun and easy to write and read.

As you write your Python code, always keep in mind that the simpler and more readable you make your code, the less chance you have of making a mistake, and it will help people that read it understand what you are trying to achieve.

Python is a modern language that brings coding into the range of being useful to network engineers. It makes it easy to build simple scripts to automate daily network tasks, but it is powerful enough to handle big data and perform complex calculations. According to the IEEE Spectrum ranking, Python was the number one programming language in 2018.

Remember that Python is just another tool like Ansible, Puppet, Git, or Jenkins, that you can use to help in network automation. While it's not the only tool, it is a very powerful and easy language to learn. Let's take a deeper look at what makes Python the perfect language to learn as you start your network programmability journey.

- 01

First, it is an interpretive language. Interpretive means that the code executes line by line, making it easier to test and debug because you don't have to compile the code.

In terms of platform compatibility, Python is flexible. Python scripts can run on a computer (Windows, macOS, or Linux), on a server, in a VM, in a container, in the cloud, and on some Cisco IOS devices. You can use Python to create scripts that can run in various places to fit the needs of your use case.

Python is an object-oriented language. Object-oriented is a program structuring method that bundles related properties and behaviors into individual objects. The best way to understand how this works is to think of a real-world item, such as a dog. A dog has properties such as a name, breed, and color, and behaviors such as barking, fetching, and wagging its tail. Defining objects in programming has the advantages of making the program easier to maintain and improving software development productivity.

Python is developed under an OSI-approved open-source license. This licensing makes it freely usable and distributed for commercial use, making it popular with developers. You can also download the source code to inspect, modify, and enhance it.

There are currently two versions of Python. Version 2.0 was introduced in 2000, with version 2.7 released in 2010. Version 3.0 was released in 2008, rectifying fundamental design flaws in version 2.0. While many things stayed the same between the two versions, some changed, such as improved integer division and better support for Unicode. Version 2.7 went end-of-life 1/1/2020, but some applications still use it today. The current version as of the writing of this course is version 3.x.

- 02

Python is a language with a rich and diverse developer ecosystem, which allows you to avoid starting from scratch. If you need to interact with a database or work with machine learning, the developer community should have you covered. This ecosystem saves you time in solving your problems. The online community is a well-established group of IT professionals using Python to deploy and maintain IT systems. As of today, Python appears to have the broadest community for network programmability. You can visit websites such as Python Package Index (PyPI), Cisco DevNet Code Exchange, and GitHub to search for code to use in your projects.

A great place to get information that describes Python's new features and processes is at the Python Enhancement Proposal (PEP) page located on the python.org site. A PEP is a design document providing information to the Python community. Two of the more well-known PEPs are PEP 8 and PEP 20. PEP 8 is the Styles Guide for Python Code, which gives you best practices for writing Python. PEP 20 is considered "The Zen of Python."
