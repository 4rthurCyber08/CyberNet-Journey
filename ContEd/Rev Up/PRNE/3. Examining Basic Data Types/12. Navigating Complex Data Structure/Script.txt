 Navigating Complex Data Structures

Let's look at how to navigate nested data sets. Learning navigation will be important when you work with APIs and data collecting systems and you want to analyze specific information. Let's look at a list first and then dictionaries.

- 01

Each object in a list has an assigned index number. The indices start at zero (0) and increase until you reach the end of the list. When nesting a list inside of a list, you work with multiple indexing systems.

- 02

This example shows a list with two other lists and a dictionary nested inside. The numbers on the bottom of the figure indicate the indices for each object. The numbers at the top of the figure indicate the indices for the items in each nested list.

These examples demonstrate retrieving objects in a nested data set:

Example 1: Retrieving the first object in the list

>>> net[0]
[a,b,c]

In this first example, since you want the first object in the list, you give the index value [0] and it will return the object [a,b,c].

Example 2: Retrieving the object "g" from the nested list

>>> net[1][2]
'g'

In the second example, you want to retrieve the object “g”, which is in the second nested list. To retrieve this object, you need to give the object's location in the main list and then give the location of the object in the nested list. The location is represented by [1][2] and will return the object "g".

Example 3: Retrieving the "interface" information from the nested dictionary

>>> net[2]["device"]["interface"]
'Gi01'

The third example retrieves the interface information from the nested dictionary. To retrieve this information, you need to give the dictionary's location in the main list, then use the key names to retrieve the interface information. The location is represented by [2]["device"]["interface"] and returns the value “Gi01”.

Let's examine retrieving information from a nested dictionary.

- 03

These two examples will show you how to retrieve data from a nested list and nested dictionary.

Example 1: Nested list in a dictionary

>>> dict = {"os": ["IOS-XE", "NX-OS"], "device": {"hostname":"R1", 
"interface":"Gi01"}}
>>> dict["os"][1]
'NX-OS'

In the first example, you want to retrieve the object "NX-OS" from the dictionary (dict). The location is represented by ["os"][1], where "os" is the key and 1 is the location in the list where "NX-OS" is located.

Example 2: Nested dictionary inside a dictionary

>>> dict = {"os": ["IOS-XE", "NX-OS"], "device": {"hostname":"R1", "interface":"Gi01"}}
>>> dict["device"]["interface"]
'Gi01"

In the second example, you want to retrieve the interface name "Gi01". The location is represented by ["device"]["interface"]; this will return the value "Gi01".