 Nested Data Types

Nested data is a simple concept, but one you encounter often in networking. Nested data typically appears in information you receive from an application programming interface (API), database, or other data collecting tool. So, what is nested data? Nesting data means putting lists or dictionaries inside another list or dictionary.

- 01

The examples show different ways that you can nest data:

Example 1: List nested in a List:

>>> devices = [["router1", "router2", "router3"], ["switch1", "switch2"]]

In example 1, you have two lists nested inside the devices list. One is a list of routers; the other is a list of switches.

Example 2: List and Dictionary nested in a List

    >>> devices = [["router1", "router2", "router3"],
      {"sw1":{"model": "3850", "os": "IOS-XE"}}]

In example 2, you have a list and a dictionary nested inside the devices list. There is a list of routers and the dictionary holds information about "sw1".

Example 3: List and Dictionaries nested in a Dictionary

  >>> devices = {"r1": { "os": "IOS-XE", "Gi01":
  { "ip": "192.168.5.1", "mask": "255.255.255.0"},
            "int": ["Gi01","Gi02","Gi03"]}}

In example 3, you nest a list and two dictionaries inside the devices dictionary. A dictionary for "Gi01" is nested inside of "r1" with a list of interfaces ("int").

Nested data follows the same data syntax rules as lists and dictionaries. If you are going to use a string, it must be in quotes.