Running a Python Script

- 01

One question about Python is whether it is an interpreted language or a compiled language. Most books will tell you that it is interpreted, and, from a high level, that’s all you need to know. But that is only half true--it is compiled, but not the same way as languages like C/C++.

Compilation is the process of taking your code and translating it to machine instructions that the CPU can execute. For languages like C/C++, compiling generates an executable that runs the steps in your code.

When you run your Python code, it is not translated to machine instructions that are run on the CPU. Instead, it is translated to bytecode that is run on a virtual machine. Bytecode is a low-level set of instructions that an interpreter can execute. Running the bytecode on a virtual machine allows Python to be platform-independent.

There are four different ways to run Python code:

    Interactive Shell: The Python interactive shell allows you to execute commands line by line.

    Terminal: The Windows and Linux terminals can execute Python code.

    IDE/Editor: The integrated execution in your IDE or Editor, such as VS Code, can execute scripts.

    File manager of your system: The system’s file manager allows you to execute a script by double-clicking on the script’s icon. This method is not typically used during development, but it may be used when the script is released to production.

Let’s examine a few of these options.

- 02

To run the Python interactive shell from a Linux or Windows terminal, type python. This command will enter you into the interactive shell, displaying the Python version that is used along with three chevrons (>>>). Once you reach this point, you can execute your commands one at a time.

If you need to write a script that you will run more than once, or if it doesn’t make sense to use the interactive shell because of the number of commands, you can save your script to a Python file. Look at the second example above. You can see that the Python file ends in .py (HelloPRNE.py).

Running a Python file from a Linux or Windows terminal can be achieved in two ways. The first way is to use the python command followed by the path to your filename. If you have more than one version of Python installed, you can run the script with a specific version by attaching the version number to the python command. For example, python3.9 HelloPRNE.py.

The second way to run the script is to use the filename without Python, as shown in the third example. Running the script this way is possible because Windows associates a particular file type with a program. In GNU/Linux, you can achieve the same result by adding a line to the top of the script that describes the path to the interpreter. This line is called the “shebang” because of the #!.

There are two ways to specify this path:

    #!/usr/bin/python: Specifies the absolute path.

    #!/usr/bin/env python: Finds the interpreter by searching the PATH variable in the operating system.