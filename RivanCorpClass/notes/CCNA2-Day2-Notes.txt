Commands
1. netstat-rn : route print - (cmd) route table - check for internet access and other connections
2. 

bit = 1 value = 1/8 byte
byte = 8 bits = 00000000 = 128, 64, 32, 16, 8, 4, 2, 1

//check IP Address of device 
whatismyipaddress.com
ipchicken.com

IP ADDRESS (Internet Protocol Address)
Public/Private IP Address
NAT - Network Address Translation
10.0.0.0 - Private (Class A) - 16 million IP Add
172.16.0.0 - Private (Class B) - 65k IP Add
192.168.0.0 - Private (Class C) - 254 IP Add

Subnet Mask Class			Default
Class A		1-126.0.0.0		255.0.0.0
Class B		128-191			255.255.0.0
Class C		192-223			255.255.255.0
Class D		224-239
Class E		240-254
 
LAPTOP, MOBILE PHONE, SMART TV - - PLDT MODEM - - CLOUD(INTERNET)
INSIDE(LAN) - OUTSIDE (WAN)

DHCP States
	Discover
	Offer
	Request
	Acknowledge

//hindi pwedeng ipamigay ang network IP, broadcast IP (.255), loopback (127.0.0.1 , ::1)

CIDR Class Interdomain Routing (CIDR) = /8, /16, /24, /32, etc.
/12 = 255.240.0.0 = 10.16.0.0 (16i,increment)




Bits (Binary Digit)


CSI Rivan Method //Used to design a network with a given IP address space and a number of users. Produces a new prefix and subnet
C = convert it (number of users to bits)
	1500 users = 11bits = 11
S = Subtract (the converted bits to the original CIDR /32)
	/32 (constant, original CIDR) - 11 = /21 (255.255.248.0)
I = ipasok sa hiwa... (Using rivan format) "3rd, 8i"
	ipasok si 8i sa 3rd octet
	10.0.8.0/21

Finding the IP address range
Network IP: 10.0.8.0
First Usable: 10.0.8.1 - add 1 from Network IP
Last Usable: 10.0.15.254 - subtract 1 from Broadcast
Broadcast: 10.0.15.255 - substract 1 from Next Network
Next Network: 10.0.16.0 - x2 ang ipinasok sa hiwa

Eyes of a Network Engineer
Normal (values 0-9): 8000
Ipv4 (values 0-255): 8.0.0.0
Ipv6 (values 0-9, a-f): ::8000

Implementation

*** ex application 01
config t
vlan 25
 name concentrix.com
 exit
Int vlan 25
 no shut
 ip add 10.0.16.1 255.255.248.0 (First Usable IP)
 
ip dhcp excluded-add 10.0.16.1 10.0.16.100 (Reserve IP)
ip dhcp pool CONCENTRIX
 network 10.0.16.0 255.255.248.0 (Network IP)
 default-router 10.0.16.1 ()
 domain-name CONCENTRIX.COM
 dns-server 10.31.1.10
 option 150 ip 10.31.100.8
 Int Fa 0/5
  no switchport
  switchport
  switchport mode access
  switchport access vlan 25
  end

*** ex application 02 (with implementation on D1, A1, and P1)
D1:
conf t
vlan 20
 name AccentureVlan
 exit
int vlan 20
 no shut
 ip add 10.0.64.1 255.255.192.0
 desc Accenture.com
ip dhcp excluded-add 10.0.64.1 10.0.64.100
ip dhcp pool poolAccenture
 network 10.0.64.0 255.255.192.0
 default-router 10.0.64.1
 domain-name ACCENTURE.COM
 ip name-server 8.8.8.8
 end
A1:
sh vlan br
conf t
int e 0/0
 swi mode acc
 swi acc vlan 10
 end
sh vlan br

P1:
conf t
int e 0/0
 no shut
 ip add dhcp
 do sh ip int br | ex una
 end
***

AUTOMATION
ANSIBLE

Commands
1. sudo su - administrator
2. ls - list
3. cd - change directory (cd /etc/ansible)
	"git clone https://github.com/rivan16/sshansible"
4. chmod -R 777 /etc/ansible
5. ip ssh version 2 - enable ssh
6. clear
7. nano filename - edit file through linux
8. vi
9. cat filename - open file but no edit
10. ssh admin@10.m.1.4 - fingerprint?yes - need to allow ansible to access routers n switch
11. ansible-playbook filename - run the file

yum -> dnf
	
WinSCP
	New Site
		host name - centos ip add from vmware
		port 22
		username & pass: centos
	Left Directory
		sshansible folder
	Righ Directory
		/etc/ansible

***
#ENABLE SSH CONNECTION
config t
ip domain-name rivanit.com
username admin privilege 15 secret pass
crypto key generate rsa
                 512->2048
ip ssh version 2
***

Matching a given IP address to it's respective IP range.
Method:
	172.28.228.144/18
		
	//convert the prefix(/18) to Rivan format
		172.28.228.144/18 (3rd, 64i)
	//find a number(x) closest to the value from the octet specified by the rivan format [172.28.228.144 (3rd, 64i)] that is divisible by the increment(64i)
		x = 64 + 64 = 128 	< 228
		x = 128 + 128 = 256 > 228
		x = 256 - 64 = 192  < 228
		x = 192				< 228
		x = 192 is the closest to 228 whilst divisible by 64 //sure ako may mas madaling paraan, bahala ka na paano mo gagawin. di ako magaling dito. Kailangan ko mag bilang, lol 
	//ipasok si x(192) sa octet na sabi ni rivan format(3rd, 64i) at gamitin parin ang given na subnet mask(/18) 
		172.28.192.0 255.255.192.0
	//IP range, using the increment(64i) you can the next subnet, and more.
		NETWORK: 		172.28.192.0 255.255.192.0
						172.28.192.0 //just add the increment(64) to the specified octet(3rd) to find the next network
						0  .0 .064.0 +
						172.28.256.0 //use the eye of a network engineer (ipv4: 0 - 255)
		NEXT NETWORK:	172.29.0.0
	//subtract 1 from the NEXT NETWORK to find the broadcast of the previous subnet
		BROADCAST:		172.28.255.255
		Next NETWORK:	172.29.0.0
	//Then find first and last usable IP within this subnet by adding 1 to the network and subtracting 1 from the broadcast
		NETWORK:		172.28.192.0 255.255.192.0
		FIRST-LAST USE:	172.28.192.1 - 172.28.255.254
		BROADCAST:		172.28.255.255
		NEXT NETWORK:	172.29.0.0
		
172.28.228.144/18 (3rd, 64i) 	5th
192-256 divisible by 64i
Network: 			172.28.192.0 255.255.192.0
First-Last Usable:	172.28.192.1 - 172.28.255.254
Broadcast:			172.28.255.255
NOT:				172.29.0.0

172.28.228.144/21 (3rd, 8i) 	2nd
224 divisible by 8i
Network:			172.28.224.0 255.255.248.0
First-Last Usable:	172.28.224.1 - 172.28.231.254
Broadcast:			172.28.231.255
NOT:				172.28.232.0

172.28.228.144/23 (3rd, 2i) 	1st
228 divisible by 2i
Network:			172.28.228.0 255.255.254.0
First-Last Usable:	172.28.228.1 - 172.28.229.254
Broadcast:			172.28.229.255
NOT:				172.28.230.0

172.28.228.144/25 (4th, 128i) 	3rd
128 divisible by 128i
Network:			172.28.228.128 255.255.255.128
First-Last Usable:	172.28.228.129 - 172.28.228.254
Broadcast:			172.28.228.255
NOT:				172.28.229.0

172.28.228.144/29 (4th, 8i)		4th 
144 divisible by 8i
Network:			172.28.228.144 255.255.255.248
First-Last Usable:	172.28.228.145 - 172.28.228.150
Broadcast:			172.28.228.151
NOT:				172.28.228.152


**
Finding the number of hosts and subnets.
Method:
	2^(/32 - /now) - 2 = Hosts		
	2^(/classNet - /now) = Subnet
	
	Class A	10.0.0.0 = 8 Nework Bits	= 1-126
	Class B	172.0.0.0 = 16 Network Bits = 128-191
	Class C	192.0.0.0 = 24 Network Bits = 192-223
	
1. How many usable host ip addresses are available in /26, /18, and /22
	ex.1 10.0.0.0 /26
			= 2^(/32 - /26) - 2	//Subtract the given prefix(/26) from the constant /32 (because ipv4 have 32 bits)
			= 2^6 - 2				//Use the difference as an exponent for 2
			= 64 - 2				//Subtract by the constant 2
	Hosts	= 62
	
	ex.2 0.0.0.0 /18
			= 2^(/32 - /18) - 2
			= 2^14 - 2			//1:2 2:4 3:8 4:16 5:32 6:64 7:128 8:256 9:512 10:1024 11:2048 12:4096 13:8192 14:16384
			= 16384 - 2
	Hosts	= 16382

	ex.3 0.0.0.0 /22
			= 2^(/32 - /22) - 2
			= 2^10 - 2
			= 1024 - 2
	Hosts	= 1022

2. How many total subnet are in the IP Add. 192.168.10.99/28, 172.168.100.69/27, and 10.0.20.2/22
	ex.1 192.168.10.99/28
			= 2^(/24 - 28)		//Subtract the given prefix(/28) from the network bits(/24) of the given IP Add's Class network
			= 2^(|-4|)			//if the difference is negative, just convert it to it's absolute value. Negatives converted to positive.
			= 2^4				//Use the difference as an exponent for 2
	Subnet	= 16
	
	ex.2 172.168.100.69/27
			= 2^(/16 - /27)
			= 2^11
	Subnet	= 2048
	
	ex.3 10.0.20.2/22
			= 2^(/24 - /22)
			= 2^2
	Subnet	= 4

**
Find IP ranges with a specific subnet
1. 	IP address space: 209.44.33.0/24
	Required subnet: 6
	8:128 7:64 6:32 5:16 4:8 3:4 2:2 1:1
	
	6 = 32i		//convert to increment value
	
	or

	6 = 3 bits							//convert to bits
	/24 + 3 = /27 (4th, 32i)			//apply the rivan format for the ip ranges
	209.44.33.0
		209.44.33.1 - 209.44.33.30
		209.44.33.31
	209.44.33.32
		209.44.33.33 - 209.44.33.62
		209.44.33.63
	209.44.33.64
		209.44.33.65 209.44.33.94
		209.44.33.95
	209.44.33.96
		209.44.33.97 - 209.44.33.126
		209.44.33.127
	209.44.33.128
		209.44.33.129 - 209.44.33.158
		204.44.33.159
		204.44.33.160


2. 	Ip address space: 147.38.0.0/16
	Required subnet: 400
	400 = 128i //find a value closest to 400 that is divisible by 8

	or

	/16 + 9 = /25 (4th, 128i)
	147.38.0.0
		147.38.0.1 - 147.38.0.126
		147.38.0.127
	147.38.0.128
		147.38.0.129 - 147.38.0.254
		147.38.0.255
	147.38.1.0
		147.38.1.1 - 147.38.1.126
		147.38.1.127
	147.38.1.128
		147.38.1.129 - 147.38.1.254
		147.38.1.255
